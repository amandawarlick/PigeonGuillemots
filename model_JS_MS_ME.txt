
model {

# Priors and constraints
beta~dunif(0,1)         ## start with simple constant model
mean.psiAB~dunif(0,1)   ## start with simple constant model
alpha[1] ~ dunif(0,1)   ## if entery at occasion1, probability entered as chick burrow
alphaKeep <-alpha[1]    ## this is the only one we want to keep 

for (u in 1:2){
 mean.phi[u] ~ dunif(0, 1)    # Priors for mean state-spec. survival
 mean.p[u] ~ dunif(0, 1)      # Priors for mean state-spec. recapture
}
for (t in 1:(n.occasions-1)){
 phiA[t]     <- mean.phi[1]   # egg survival
 phiB[t]     <- mean.phi[2]   # chick survival
 gamma[t]    ~ dunif(0, 1)    # Prior for entry probabilities at occasion t
 pA[t]       <- mean.p[1]     # egg burrow detection
 pB[t]       <- mean.p[2]     # chick burrow detection
 psiAB[t]    <- mean.psiAB
 alpha[t+1]  <-0              #probability of entry as chick on occasion t+1 
}

# Likelihood 
for (i in 1:M){
 # Define latent state at first occasion
 z[i,1] <- 1            # Make sure that all M individuals are in state 1 at t=1 (e.g., one day prior to season)
 for (t in 2:n.occasions){
  # State process: draw S(t) given S(t-1)
  z[i,t] ~ dcat(ps[z[i,t-1], i, t-1,])
  # Observation process: draw O(t) given S(t)
  y[i,t] ~ dcat(po[z[i,t], i, t-1,])  
   #this follow Kery and Schaub 10.3.2, indexing is tricky. e.g., y[i,2] is a function of state[i,2] and observation array t=1
   #so if detection covariates are used, DO NOT ADD DUMMY OCCASION to detection covariates as detection data at occasion t uses array t-1

  # Derive some stuff along the way
  egg[i,t-1]    <- equals(z[i,t], 2)
  chick[i,t-1]  <- equals(z[i,t], 3)
  active[i,t-1] <- max(egg[i,t-1],chick[i,t-1]) #egg or chick
 } #t
 everEgg[i]    <- max(egg[i,])
 everChick[i]  <- max(chick[i,])
 EverActive[i] <- max(everChick[i],everEgg[i])
} #i


# Define transition and observation matrices
 for (i in 1:M){
  for (t in 1:(n.occasions-1)) {
      # Define probabilities of state S(t+1) given S(t)   
      ps[1,i,t,1] <- 1-gamma[t]               #probability of not entering
      ps[1,i,t,2] <- gamma[t]*(1-alpha[t])    #probability of entering as egg
      ps[1,i,t,3] <- gamma[t]*alpha[t]        #probability of entering as chick. Note: only alpha[1]>0
      ps[1,i,t,4] <- 0                        #probability of entering as terminated
      ps[2,i,t,1] <- 0                        #probability egg goes to 'not entered'
      ps[2,i,t,2] <- phiA[t]*(1-psiAB[t])     #probability of surviving egg state and not transitioning
      ps[2,i,t,3] <- phiA[t]*psiAB[t]         #probability of surviving egg state and hatching
      ps[2,i,t,4] <- 1-phiA[t]                #probability of a failed egg
      ps[3,i,t,1] <- 0                        #probability chick goes to 'not entered'
      ps[3,i,t,2] <- 0                        #probability chickgoes to egg
      ps[3,i,t,3] <- phiB[t]                  #probability of surviving chick stage
      ps[3,i,t,4] <- 1-phiB[t]                #probability of failed chick
      ps[4,i,t,1] <- 0                        #probability terminated goes to 'not entered'
      ps[4,i,t,2] <- 0                        #probability terminated goes to egg (maybe?)
      ps[4,i,t,3] <- 0                        #probability terminated goes to chick
      ps[4,i,t,4] <- 1                        #probability terminated goes to terminated
      
      # Define probabilities of O(t) given S(t)
      po[1,i,t,1] <- 0                        #probability an 'not entered' burrow is detected with a burrow visit
      po[1,i,t,2] <- 0                        #probability an 'not entered' burrow is detected with a prey visit
      po[1,i,t,3] <- 1                        #probability an 'not entered' burrow is not detected
      po[2,i,t,1] <- pA[t]                    #probability an egg burrow is detected with a burrow visit
      po[2,i,t,2] <- 0                        #probability an egg burrow is detected with a prey visit
      po[2,i,t,3] <- 1-pA[t]                  #probability an egg burrow is not detected
      po[3,i,t,1] <- beta*pB[t]               #probability a chick burrow is detected with a burrow visit 
      po[3,i,t,2] <- (1-beta)*pB[t]           #probability a chick burrow is detected with a prey visit
      po[3,i,t,3] <- 1 - pB[t]                #probability a chick burrow is not detected
      po[4,i,t,1] <- 0                        #probability a terminated burrow is detected with a burrow visit
      po[4,i,t,2] <- 0                        #probability a terminated burrow is detected with a prey visit
      po[4,i,t,3] <- 1                        #probability a terminated burrow is not detected
  } #t
 }#M
#derive abundances (lots of options here, e.g., site specific, annual, etc.) 
 for (t in 1:(n.occasions-1)){
  N.egg[t]    <- sum(egg[1:M,t])
  N.chick[t]  <- sum(chick[1:M,t])
  N.active[t] <- sum(active[1:M,t])
  qgamma[t] <- 1-gamma[t]
  b[t] <- cprob[t] / psi      # Entry probability
}
 cprob[1] <- gamma[1]
 for (t in 2:(n.occasions-1)){
  cprob[t] <- gamma[t] * prod(qgamma[1:(t-1)])
 }#t
 psi <- sum(cprob[])            # Inclusion probability

Nstar<-sum(EverActive[1:M])
 
}#model

